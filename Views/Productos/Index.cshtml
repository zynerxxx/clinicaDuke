@model IEnumerable<clinicaDukeDB.ViewModels.ProductoViewModel>
@{
    ViewData["Title"] = "Productos";
}

<style>
    /* Animaciones elegantes para la página de productos */
    @@keyframes fadeInUp {
        0% { opacity: 0; transform: translateY(30px); }
        100% { opacity: 1; transform: translateY(0); }
    }
    @@keyframes fadeIn {
        0% { opacity: 0; }
        100% { opacity: 1; }
    }
    @@keyframes scaleIn {
        0% { opacity: 0; transform: scale(0.95); }
        100% { opacity: 1; transform: scale(1); }
    }
    .productos-card {
        border-radius: 1.2rem;
        box-shadow: 0 4px 24px 0 rgba(108,99,255,0.08);
        background: #fff;
        padding: 2.5rem 2.2rem;
        margin-top: 2.5rem;
        margin-bottom: 2.5rem;
        max-width: 1100px;
        margin-left: auto;
        margin-right: auto;
        animation: fadeInUp 0.8s cubic-bezier(.4,0,.2,1);
    }
    .productos-title {
        font-size: 2.1rem;
        font-weight: 700;
        color: #554ee0;
        margin-bottom: 1.5rem;
        letter-spacing: -1px;
        animation: fadeIn 1.2s cubic-bezier(.4,0,.2,1);
    }
    .productos-table th {
        color: #6c63ff;
        font-weight: 700;
        background: #f7f7fd;
        border-bottom: 2px solid #ecebfa !important;
    }
    .productos-table td {
        vertical-align: middle;
    }
    .btn-elegant {
        border-radius: 0.75rem;
        padding: 0.5rem 1.5rem;
        font-size: 1.05rem;
        transition: background 0.2s, color 0.2s, box-shadow 0.2s, transform 0.18s cubic-bezier(.4,0,.2,1);
        box-shadow: 0 2px 8px 0 rgba(108,99,255,0.08);
        animation: fadeIn 1.1s cubic-bezier(.4,0,.2,1);
    }
    .btn-elegant-primary {
        background: #6c63ff;
        color: #fff;
        border: none;
    }
    .btn-elegant-primary:hover {
        background: #554ee0;
        color: #fff;
    }
    .btn-elegant-outline {
        background: #fff;
        color: #6c63ff;
        border: 1.5px solid #6c63ff;
    }
    .btn-elegant-outline:hover {
        background: #f3f2fd;
        color: #554ee0;
    }
    .form-elegant {
        background: #f7f7fd;
        border-radius: 1.1rem;
        padding: 1.5rem 2rem;
        margin-bottom: 2rem;
        box-shadow: 0 2px 8px 0 rgba(108,99,255,0.06);
        animation: fadeInUp 0.9s cubic-bezier(.4,0,.2,1);
    }
    .alert {
        transition: opacity 0.7s cubic-bezier(.4,0,.2,1);
        animation: fadeIn 0.7s cubic-bezier(.4,0,.2,1);
    }
    .btn-elegant, .btn-elegant-primary, .btn-elegant-outline {
        transition: background 0.2s, color 0.2s, box-shadow 0.2s, transform 0.18s cubic-bezier(.4,0,.2,1);
    }
    .btn-elegant:hover, .btn-elegant-primary:hover, .btn-elegant-outline:hover {
        transform: translateY(-2px) scale(1.04);
        box-shadow: 0 6px 24px 0 rgba(108,99,255,0.13);
    }
    .btn-elegant:active, .btn-elegant-primary:active, .btn-elegant-outline:active {
        transform: scale(0.98);
    }
    .modal.fade .modal-dialog {
        transition: transform 0.35s cubic-bezier(.4,0,.2,1), opacity 0.35s cubic-bezier(.4,0,.2,1);
        transform: translateY(-30px) scale(0.98);
        opacity: 0;
    }
    .modal.fade.show .modal-dialog {
        transform: translateY(0) scale(1);
        opacity: 1;
    }
    .productos-card {
        animation: fadeInUp 0.7s cubic-bezier(.4,0,.2,1);
    }
    .productos-table tbody tr {
        animation: fadeInUp 0.7s cubic-bezier(.4,0,.2,1);
        transition: background 0.2s, box-shadow 0.2s, transform 0.18s cubic-bezier(.4,0,.2,1);
    }
    .productos-table tbody tr:hover {
        background: #f3f2fd;
        box-shadow: 0 2px 12px 0 rgba(108,99,255,0.07);
    }
    .modal-content {
        animation: scaleIn 0.4s cubic-bezier(.4,0,.2,1);
    }
    #infoProductoContent .row {
        border-bottom: 1px solid #ecebfa;
        padding-bottom: 0.3rem;
        margin-bottom: 0.3rem;
        animation: fadeInUp 0.7s cubic-bezier(.4,0,.2,1);
    }
    #infoProductoContent .row:last-child {
        border-bottom: none;
    }
    #infoProductoContent .fw-bold.text-primary {
        display: flex;
        align-items: center;
        gap: 0.4em;
    }
    #infoProductoContent .icon-info {
        color: #6c63ff;
        font-size: 1.1em;
    }
    /* Loader para la tabla */
    #tablaLoader {
        position: absolute;
        left: 0; right: 0; top: 0; bottom: 0;
        background: rgba(255,255,255,0.7);
        z-index: 10;
        display: flex;
        align-items: center;
        justify-content: center;
        font-size: 2rem;
        color: #6c63ff;
        transition: opacity 0.4s;
        opacity: 0;
        pointer-events: none;
    }
    #tablaLoader.active {
        opacity: 1;
        pointer-events: all;
    }
    /* Fade animación para el tbody */
    .fade-table {
        opacity: 0;
        transition: opacity 0.4s;
    }
    .fade-table.show {
        opacity: 1;
    }
    /* --- Mejoras visuales para paginación, selector de registros y buscador en la vista de productos --- */
    .dataTables_length label {
        font-weight: 500;
        color: #554ee0;
        font-size: 1.07rem;
        margin-right: 1.1rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    .dataTables_length select {
        border-radius: 0.8rem;
        border: 1px solid #ecebfa;
        background: #f7f7fd;
        color: #554ee0;
        font-weight: 600;
        padding: 0.25rem 1.1rem 0.25rem 0.7rem;
        font-size: 1.05rem;
        transition: border 0.2s, box-shadow 0.2s;
        outline: none;
        box-shadow: 0 1px 4px 0 rgba(108,99,255,0.07);
    }
    .dataTables_length select:focus {
        border: 1.5px solid #6c63ff;
        background: #ecebfa;
    }
    /* --- LIMPIEZA Y CORRECCIÓN DE ESTILOS PARA BUSCADOR Y PAGINACIÓN DATATABLES --- */
    /* Elimina estilos previos conflictivos y aplica solo los necesarios */
    .dataTables_filter label {
        font-size: 1rem;
        color: #554ee0;
        font-weight: 600;
        margin-bottom: 0;
        margin-right: 0.7rem;
        letter-spacing: -0.2px;
    }
    .dataTables_filter {
        margin-bottom: 0.7rem;
        display: flex;
        align-items: center;
        gap: 0.5rem;
    }
    .dataTables_filter input[type="search"] {
        border-radius: 2rem !important;
        border: 2.5px solid #6c63ff !important;
        background: #fff !important;
        color: #554ee0 !important;
        font-weight: 500 !important;
        padding: 0.5rem 1.5rem 0.5rem 2.5rem !important;
        font-size: 1.12rem !important;
        min-width: 200px !important;
        box-shadow: 0 2px 12px 0 rgba(108,99,255,0.10) !important;
        background-image: url('data:image/svg+xml;utf8,<svg fill="%23554ee0" height="22" viewBox="0 0 24 24" width="22" xmlns="http://www.w3.org/2000/svg"><path d="M15.5 14h-.79l-.28-.27A6.471 6.471 0 0 0 16 9.5 6.5 6.5 0 1 0 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99c.41.41 1.09.41 1.5 0s.41-1.09 0-1.5l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z"/></svg>') !important;
        background-repeat: no-repeat !important;
        background-position: 1rem center !important;
        background-size: 1.5rem 1.5rem !important;
        transition: border 0.2s, box-shadow 0.2s !important;
    }
    .dataTables_filter input[type="search"]:focus {
        outline: none !important;
        border: 2.5px solid #a084ff !important;
        color: #554ee0 !important;
        background: #fff !important;
        box-shadow:
            0 0 8px 2px #a084ff,
            0 0 16px 4px #6c63ff,
            0 0 32px 8px #6c63ff80;
        transition: box-shadow 0.25s, border 0.2s;
    }
    /* --- PAGINACIÓN MATERIAL MINIMALISTA LIMPIA Y FUNCIONAL --- */
    .dataTables_paginate {
        display: flex;
        justify-content: center;
        align-items: center;
        margin-top: 1.2rem;
        gap: 0.5rem;
        flex-wrap: wrap;
        max-width: 100%;
        box-sizing: border-box;
        width: 100%;
    }
    .dataTables_paginate .pagination {
        display: flex !important;
        gap: 0.18rem !important;
        background: none !important;
        border: none !important;
        box-shadow: none !important;
        padding: 0 !important;
        flex-wrap: wrap;
        max-width: 100%;
        box-sizing: border-box;
    }
    .dataTables_paginate .paginate_button {
        flex-shrink: 1;
        box-sizing: border-box;
    }
    @@media (max-width: 600px) {
        .dataTables_paginate .paginate_button {
            min-width: 1.7rem;
            min-height: 1.7rem;
            width: 1.7rem;
            height: 1.7rem;
            font-size: 1rem !important;
        }
        .dataTables_paginate {
            gap: 0.2rem;
        }
    }
    .dataTables_paginate .paginate_button.current {
        background: #6c63ff !important;
        color: #fff !important;
        border: 1.5px solid #6c63ff !important;
        font-weight: 800 !important;
    }
    .dataTables_paginate .paginate_button:not(.current):not(.disabled):hover,
    .dataTables_paginate .paginate_button:not(.current):not(.disabled):focus {
        background: #ecebfa !important;
        color: #6c63ff !important;
        border: 1.5px solid #a084ff !important;
    }
    .dataTables_paginate .paginate_button.disabled {
        color: #d1d1e0 !important;
        background: #fff !important;
        opacity: 0.6 !important;
        cursor: default !important;
        border: 1.5px solid #ecebfa !important;
    }
    /* Flechas de paginación SIEMPRE visibles y del mismo tamaño usando < y > para máxima compatibilidad */
    .dataTables_paginate .paginate_button.previous,
    .dataTables_paginate .paginate_button.next {
        color: #6c63ff !important;
        font-size: 1.3rem !important;
        font-weight: bold;
        background: #fff !important;
        border-radius: 50% !important;
        border: 1.5px solid #ecebfa !important;
        min-width: 2.1rem;
        min-height: 2.1rem;
        width: 2.1rem;
        height: 2.1rem;
        display: inline-flex !important;
        align-items: center;
        justify-content: center;
        margin: 0 0.07rem !important;
        padding: 0 !important;
        position: relative;
        user-select: none;
        transition: background 0.18s, color 0.18s, border 0.18s !important;
    }
    .dataTables_paginate .paginate_button.previous,
    .dataTables_paginate .paginate_button.next {
        color: #6c63ff !important;
    }
    .dataTables_paginate .paginate_button.previous.disabled,
    .dataTables_paginate .paginate_button.next.disabled {
        opacity: 0.3 !important;
    }
    .dataTables_paginate .paginate_button.previous,
    .dataTables_paginate .paginate_button.next {
        font-size: 1.3rem !important; /* ¡NO poner a 0! */
    }
    /* --- ESTILO MODERNO PARA LOS NÚMEROS DE PAGINACIÓN --- */
    .dataTables_paginate .paginate_button:not(.previous):not(.next) {
        background: #f7f7fd !important;
        border: 2px solid #ecebfa !important;
        color: #6c63ff !important;
        font-weight: 600;
        font-size: 1.13rem !important;
        border-radius: 0.7rem !important;
        min-width: 2.3rem;
        min-height: 2.3rem;
        width: 2.3rem;
        height: 2.3rem;
        display: inline-flex !important;
        align-items: center;
        justify-content: center;
        margin: 0 0.13rem !important;
        box-shadow: 0 1px 4px 0 rgba(108,99,255,0.07);
        transition: background 0.18s, color 0.18s, border 0.18s, box-shadow 0.18s !important;
    }
    .dataTables_paginate .paginate_button:not(.previous):not(.next):hover,
    .dataTables_paginate .paginate_button:not(.previous):not(.next):focus {
        background: #ecebfa !important;
        color: #554ee0 !important;
        border: 2px solid #a084ff !important;
        box-shadow: 0 4px 16px 0 rgba(108,99,255,0.13);
    }
    .dataTables_paginate .paginate_button.current:not(.previous):not(.next),
    .dataTables_paginate .paginate_button.current:not(.previous):not(.next):hover,
    .dataTables_paginate .paginate_button.current:not(.previous):not(.next):focus,
    .dataTables_paginate .paginate_button.current:not(.previous):not(.next):active {
        background: #6c63ff !important;
        color: #fff !important;
        border: 2px solid #6c63ff !important;
        font-weight: 800 !important;
        box-shadow: 0 2px 8px 0 rgba(108,99,255,0.13);
    }
    .dataTables_paginate .paginate_button.current:not(.previous):not(.next) *,
    .dataTables_paginate .paginate_button.current:not(.previous):not(.next):hover *,
    .dataTables_paginate .paginate_button.current:not(.previous):not(.next):focus *,
    .dataTables_paginate .paginate_button.current:not(.previous):not(.next):active * {
        color: #fff !important;
        fill: #fff !important;
        text-shadow: none !important;
    }
    /* --- CORRECCIÓN EXTREMA: Forzar color blanco en cualquier descendiente del botón activo de paginación --- */
    .dataTables_paginate .paginate_button.current,
    .dataTables_paginate .paginate_button.current *,
    .dataTables_paginate .paginate_button.current a,
    .dataTables_paginate .paginate_button.current span {
        color: #fff !important;
        fill: #fff !important;
        text-shadow: none !important;
    }
    /* También forzar el color en strong, b, y cualquier otro posible descendiente */
    .dataTables_paginate .paginate_button.current strong,
    .dataTables_paginate .paginate_button.current b {
        color: #fff !important;
    }
    /* Asegura que los botones de paginación tengan texto oculto pero accesible */
    .dataTables_paginate .paginate_button.previous,
    .dataTables_paginate .paginate_button.next {
        position: relative;
        color: transparent !important;
    }
    .dataTables_paginate .paginate_button.previous::after {
        content: 'Anterior';
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        color: #6c63ff;
        font-size: 0;
    }
    .dataTables_paginate .paginate_button.next::after {
        content: 'Siguiente';
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, -50%);
        color: #6c63ff;
        font-size: 0;
    }
    .dataTables_paginate .paginate_button.previous::before,
    .dataTables_paginate .paginate_button.next::before {
        font-size: 1.1em;
    }
    /* Asegura que la paginación nunca se salga del contenedor */
    .productos-card, .table-responsive {
        overflow: hidden;
    }
</style>

<div class="productos-card">
    <div class="productos-title mb-4">
        <i class="fa fa-box"></i> Gestión de Productos
    </div>
    <form asp-action="Crear" method="post" class="form-elegant mb-4" autocomplete="off">
        <div class="row g-3 align-items-end">
            <div class="col-md-3">
                <label for="Nombre" class="form-label">Nombre <span class="text-danger">*</span></label>
                <input name="Nombre" id="Nombre" class="form-control" required maxlength="150" />
            </div>
            <div class="col-md-2">
                <label for="IdTipoProducto" class="form-label">Tipo <span class="text-danger">*</span></label>
                <select name="IdTipoProducto" id="IdTipoProducto" class="form-select" required>
                    <option value="">Seleccione...</option>
                    @foreach (var t in (IDictionary<int, string>)ViewBag.Tipos) { <option value="@t.Key">@t.Value</option> }
                </select>
            </div>
            <div class="col-md-2">
                <label for="IdUnidadMedida" class="form-label">Unidad <span class="text-danger">*</span></label>
                <select name="IdUnidadMedida" id="IdUnidadMedida" class="form-select" required>
                    <option value="">Seleccione...</option>
                    @foreach (var u in (IDictionary<int, string>)ViewBag.Unidades) { <option value="@u.Key">@u.Value</option> }
                </select>
            </div>
            <div class="col-md-2">
                <label for="Concentracion" class="form-label">Concentración</label>
                <input name="Concentracion" id="Concentracion" class="form-control" maxlength="50" />
            </div>
            <div class="col-md-3">
                <button type="submit" class="btn btn-elegant btn-elegant-primary w-100" aria-label="Agregar producto">
                    <i class="fa fa-plus"></i> Agregar
                </button>
            </div>
        </div>
        <div class="row g-3 mt-2">
            <div class="col-md-2">
                <label for="IdPresentacion" class="form-label">Presentación</label>
                <select name="IdPresentacion" id="IdPresentacion" class="form-select">
                    <option value="">Seleccione...</option>
                    @foreach (var p in (IDictionary<int, string>)ViewBag.Presentaciones) { <option value="@p.Key">@p.Value</option> }
                </select>
            </div>
            <div class="col-md-2">
                <label for="IdLaboratorio" class="form-label">Laboratorio</label>
                <select name="IdLaboratorio" id="IdLaboratorio" class="form-select">
                    <option value="">Seleccione...</option>
                    @foreach (var l in (IDictionary<int, string>)ViewBag.Laboratorios) { <option value="@l.Key">@l.Value</option> }
                </select>
            </div>
            <div class="col-md-2">
                <label for="IdCategoria" class="form-label">Categoría</label>
                <select name="IdCategoria" id="IdCategoria" class="form-select">
                    <option value="">Seleccione...</option>
                    @foreach (var c in (IDictionary<int, string>)ViewBag.Categorias) { <option value="@c.Key">@c.Value</option> }
                </select>
            </div>
            <div class="col-md-2">
                <label for="CodigoBarras" class="form-label">Código Barras</label>
                <input name="CodigoBarras" id="CodigoBarras" class="form-control" maxlength="50" />
            </div>
            <div class="col-md-2">
                <label for="Descripcion" class="form-label">Descripción</label>
                <input name="Descripcion" id="Descripcion" class="form-control" maxlength="300" />
            </div>
            <div class="col-md-2">
                <label for="FechaVencimiento" class="form-label">Fecha Vencimiento</label>
                <input type="date" name="FechaVencimiento" id="FechaVencimiento" class="form-control" min="@DateTime.Today.ToString("yyyy-MM-dd")" />
            </div>
        </div>
    </form>
    <div class="table-responsive position-relative" style="min-height: 350px;">
        <div id="tablaLoader"><i class="fa fa-spinner fa-spin"></i> Cargando...</div>
        <table class="table productos-table align-middle" id="tablaProductos">
            <thead>
                <tr>
                    <th>Nombre</th>
                    <th>Tipo</th>
                    <th>Unidad</th>
                    <th>Concentración</th>
                    <th>Código Barras</th>
                    <th>Acciones</th>
                </tr>
            </thead>
            <tbody class="fade-table show">
                <!-- El contenido será llenado por DataTables AJAX -->
            </tbody>
        </table>
    </div>
</div>
<!-- Modal Info Único -->
<div class="modal fade" id="modalInfoUnico" tabindex="-1" aria-labelledby="modalInfoUnicoLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="modalInfoUnicoLabel">Información del insumo</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
            </div>
            <div class="modal-body" id="infoProductoBody" style="max-height: 60vh; overflow-y: auto;">
                <div id="infoProductoContent">
                    <div class="text-center text-muted">Cargando...</div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal Editar Único -->
<div class="modal fade" id="modalEditarUnico" tabindex="-1" aria-labelledby="modalEditarUnicoLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="formEditar" asp-action="Editar" method="post">
    @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="modalEditarUnicoLabel">Editar producto</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body bg-light px-4 py-3" style="border-radius: 1.2rem;">
                    <input type="hidden" name="Id" id="editarId" />
                    <div class="row g-3">
                        <div class="col-12 mb-2">
                            <label class="form-label fw-semibold text-primary">Nombre <span class="text-danger">*</span></label>
                            <input name="Nombre" id="editarNombre" class="form-control shadow-sm border-0" required maxlength="150" placeholder="Ej: Alcohol gel 70%" />
                        </div>
                        <div class="col-md-6 mb-2">
                            <label class="form-label fw-semibold text-primary">Tipo <span class="text-danger">*</span></label>
                            <select name="IdTipoProducto" id="editarTipo" class="form-select shadow-sm border-0" required>
                                <option value="">Seleccione...</option>
                                @foreach (var t in (IDictionary<int, string>)ViewBag.Tipos) { <option value="@t.Key">@t.Value</option> }
                            </select>
                        </div>
                        <div class="col-md-6 mb-2">
                            <label class="form-label fw-semibold text-primary">Unidad <span class="text-danger">*</span></label>
                            <select name="IdUnidadMedida" id="editarUnidad" class="form-select shadow-sm border-0" required>
                                <option value="">Seleccione...</option>
                                @foreach (var u in (IDictionary<int, string>)ViewBag.Unidades) { <option value="@u.Key">@u.Value</option> }
                            </select>
                        </div>
                        <div class="col-md-6 mb-2">
                            <label class="form-label fw-semibold text-primary">Presentación</label>
                            <select name="IdPresentacion" id="editarPresentacion" class="form-select shadow-sm border-0">
                                <option value="">Seleccione...</option>
                                @foreach (var p in (IDictionary<int, string>)ViewBag.Presentaciones) { <option value="@p.Key">@p.Value</option> }
                            </select>
                        </div>
                        <div class="col-md-6 mb-2">
                            <label class="form-label fw-semibold text-primary">Laboratorio</label>
                            <select name="IdLaboratorio" id="editarLaboratorio" class="form-select shadow-sm border-0">
                                <option value="">Seleccione...</option>
                                @foreach (var l in (IDictionary<int, string>)ViewBag.Laboratorios) { <option value="@l.Key">@l.Value</option> }
                            </select>
                        </div>
                        <div class="col-md-6 mb-2">
                            <label class="form-label fw-semibold text-primary">Categoría</label>
                            <select name="IdCategoria" id="editarCategoria" class="form-select shadow-sm border-0">
                                <option value="">Seleccione...</option>
                                @foreach (var c in (IDictionary<int, string>)ViewBag.Categorias) { <option value="@c.Key">@c.Value</option> }
                            </select>
                        </div>
                        <div class="col-md-6 mb-2">
                            <label class="form-label fw-semibold text-primary">Concentración</label>
                            <input name="Concentracion" id="editarConcentracion" class="form-control shadow-sm border-0" maxlength="50" placeholder="Ej: 500mg, 70%" />
                        </div>
                        <div class="col-md-6 mb-2">
                            <label class="form-label fw-semibold text-primary">Código Barras</label>
                            <input name="CodigoBarras" id="editarCodigoBarras" class="form-control shadow-sm border-0" maxlength="50" placeholder="Ej: 7412345678908" />
                        </div>
                        <div class="col-md-6 mb-2">
                            <label class="form-label fw-semibold text-primary">Descripción</label>
                            <input name="Descripcion" id="editarDescripcion" class="form-control shadow-sm border-0" maxlength="300" placeholder="Ej: Gel antibacterial" />
                        </div>
                        <div class="col-md-6 mb-2">
                            <label class="form-label fw-semibold text-primary">Fecha Vencimiento</label>
                            <input type="date" name="FechaVencimiento" id="editarFechaVencimiento" class="form-control shadow-sm border-0" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-elegant btn-elegant-primary">Guardar</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- Modal Eliminar Único -->
<div class="modal fade" id="modalEliminarUnico" tabindex="-1" aria-labelledby="modalEliminarUnicoLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form id="formEliminar" asp-action="Eliminar" method="post">
    @Html.AntiForgeryToken()
                <div class="modal-header">
                    <h5 class="modal-title" id="modalEliminarUnicoLabel">Confirmar eliminación</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Cerrar"></button>
                </div>
                <div class="modal-body">
                    ¿Está seguro que desea eliminar este producto?
                    <input type="hidden" name="id" id="eliminarId" />
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancelar</button>
                    <button type="submit" class="btn btn-danger">Eliminar</button>
                </div>
            </form>
        </div>
    </div>
</div>
<div id="toastMensaje" class="toast align-items-center text-white bg-success border-0 position-fixed top-0 end-0 m-4" role="alert" aria-live="assertive" aria-atomic="true" style="z-index: 2000; min-width: 260px; display:none;">
        <div class="d-flex">
            <div class="toast-body" id="toastMensajeBody">
                <!-- Mensaje dinámico -->
            </div>
            <button type="button" class="btn-close btn-close-white me-2 m-auto" data-bs-dismiss="toast" aria-label="Cerrar"></button>
        </div>
    </div>
@if (TempData["Error"] != null) {
        <script>window.addEventListener('DOMContentLoaded',function(){mostrarToast('@TempData["Error"]','danger');});</script>
    }
    @if (TempData["Success"] != null) {
        <script>window.addEventListener('DOMContentLoaded',function(){mostrarToast('@TempData["Success"]','success');});</script>
    }
@section Scripts {
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css" />
    <script>
        // Diccionarios para mostrar nombres en vez de IDs
        const tipos = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Tipos ?? new Dictionary<int, string>()));
        const unidades = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Unidades ?? new Dictionary<int, string>()));
        const presentaciones = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Presentaciones ?? new Dictionary<int, string>()));
        const laboratorios = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Laboratorios ?? new Dictionary<int, string>()));
        const categorias = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Categorias ?? new Dictionary<int, string>()));

        function renderAcciones(id) {
            return `
                <button type="button" class="btn btn-sm btn-elegant btn-elegant-outline" onclick="confirmarEliminar(${id})" title="Eliminar" aria-label="Eliminar producto">
                    <i class="fa fa-trash"></i>
                </button>
                <button type="button" class="btn btn-sm btn-elegant btn-elegant-primary ms-1" onclick="mostrarEditar(${id})" title="Editar" aria-label="Editar producto">
                    <i class="fa fa-edit"></i>
                </button>
                <button type="button" class="btn btn-sm btn-elegant btn-elegant-outline ms-1" onclick="mostrarInfo(${id})" title="Ver información" aria-label="Ver información del producto">
                    <i class="fa fa-info-circle"></i>
                </button>`;
        }

        $(document).ready(function () {
            var tabla = $('#tablaProductos').DataTable({
                language: {
                    url: '//cdn.datatables.net/plug-ins/1.13.4/i18n/es-ES.json',
                    paginate: {
                        previous: '<i class="fa fa-chevron-left"></i>',
                        next: '<i class="fa fa-chevron-right"></i>'
                    }
                },
                pageLength: 10,
                lengthMenu: [5, 10, 25, 50],
                order: [[0, 'asc']],
                processing: true,
                serverSide: true,
                ajax: {
                    url: '/Productos/ObtenerAjax',
                    type: 'GET',
                    dataSrc: function (json) {
                        return json.data;
                    },
                    beforeSend: function () {
                        $('#tablaLoader').addClass('active');
                    },
                    complete: function () {
                        $('#tablaLoader').removeClass('active');
                    }
                },
                columns: [
                    { data: 'nombre' },
                    { data: 'idTipoProducto', render: function (data) { return tipos[data] || '-'; } },
                    { data: 'idUnidadMedida', render: function (data) { return unidades[data] || '-'; } },
                    { data: 'concentracion', defaultContent: '-' },
                    { data: 'codigoBarras', defaultContent: '-' },
                    { data: 'id', orderable: false, searchable: false, render: function (data) { return renderAcciones(data); } }
                ],
                drawCallback: function () {
                    var tbody = $('#tablaProductos tbody');
                    tbody.removeClass('show');
                    setTimeout(function () {
                        tbody.addClass('show');
                    }, 10);
                },
                preDrawCallback: function () {
                    $('#tablaProductos tbody').removeClass('show');
                }
            });
        });
        function mostrarInfo(id) {
            var modal = new bootstrap.Modal(document.getElementById('modalInfoUnico'));
            var body = document.getElementById('infoProductoBody');
            var content = document.getElementById('infoProductoContent');
            if (!content) {
                body.innerHTML = '<div id="infoProductoContent"><div class="text-center text-muted">Cargando...</div></div>';
                content = document.getElementById('infoProductoContent');
            } else {
                content.innerHTML = '<div class="text-center text-muted">Cargando...</div>';
            }
            fetch('/Productos/Detalle/' + id)
                .then(r => {
                    if (!r.ok) throw new Error('No encontrado');
                    return r.json();
                })
                .then(p => {
                    function getNombre(dic, id) {
                        if (!id) return '<span class="text-muted">-</span>';
                        return dic && dic[id] ? dic[id] : '<span class="text-muted">-</span>';
                    }
                    content.innerHTML = `
                        <div class="container-fluid px-0">
                            <div class="row mb-2">
                                <div class="col-5 fw-bold text-primary"><i class='fa fa-font icon-info'></i> Nombre</div>
                                <div class="col-7">${p.nombre ?? '<span class=\'text-muted\'>-</span>'}</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-5 fw-bold text-primary"><i class='fa fa-tag icon-info'></i> Tipo</div>
                                <div class="col-7">${getNombre(tipos, p.idTipoProducto)}</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-5 fw-bold text-primary"><i class='fa fa-flask icon-info'></i> Presentación</div>
                                <div class="col-7">${getNombre(presentaciones, p.idPresentacion)}</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-5 fw-bold text-primary"><i class='fa fa-industry icon-info'></i> Laboratorio</div>
                                <div class="col-7">${getNombre(laboratorios, p.idLaboratorio)}</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-5 fw-bold text-primary"><i class='fa fa-list icon-info'></i> Categoría</div>
                                <div class="col-7">${getNombre(categorias, p.idCategoria)}</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-5 fw-bold text-primary"><i class='fa fa-balance-scale icon-info'></i> Unidad</div>
                                <div class="col-7">${getNombre(unidades, p.idUnidadMedida)}</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-5 fw-bold text-primary"><i class='fa fa-percent icon-info'></i> Concentración</div>
                                <div class="col-7">${p.concentracion ? p.concentracion : '<span class=\'text-muted\'>-</span>'}</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-5 fw-bold text-primary"><i class='fa fa-barcode icon-info'></i> Código Barras</div>
                                <div class="col-7">${p.codigoBarras ? p.codigoBarras : '<span class=\'text-muted\'>-</span>'}</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-5 fw-bold text-primary"><i class='fa fa-align-left icon-info'></i> Descripción</div>
                                <div class="col-7">${p.descripcion ? p.descripcion : '<span class=\'text-muted\'>-</span>'}</div>
                            </div>
                            <div class="row mb-2">
                                <div class="col-5 fw-bold text-primary"><i class='fa fa-calendar icon-info'></i> Fecha Vencimiento</div>
                                <div class="col-7">${p.fechaVencimiento ? (p.fechaVencimiento.substring(0,10).split('-').reverse().join('/')) : '<span class=\'text-muted\'>-</span>'}</div>
                            </div>
                        </div>`;
                })
                .catch(() => {
                    content.innerHTML = '<div class="text-danger">No se pudo cargar la información.</div>';
                });
            modal.show();
        }
        function mostrarEditar(id) {
            fetch('/Productos/Detalle/' + id)
                .then(r => r.json())
                .then(p => {
                    document.getElementById('editarId').value = p.id;
                    document.getElementById('editarNombre').value = p.nombre ?? '';
                    document.getElementById('editarTipo').value = p.idTipoProducto ?? '';
                    document.getElementById('editarUnidad').value = p.idUnidadMedida ?? '';
                    document.getElementById('editarPresentacion').value = p.idPresentacion ?? '';
                    document.getElementById('editarLaboratorio').value = p.idLaboratorio ?? '';
                    document.getElementById('editarCategoria').value = p.idCategoria ?? '';
                    document.getElementById('editarConcentracion').value = p.concentracion ?? '';
                    document.getElementById('editarCodigoBarras').value = p.codigoBarras ?? '';
                    document.getElementById('editarDescripcion').value = p.descripcion ?? '';
                    document.getElementById('editarFechaVencimiento').value = p.fechaVencimiento ? p.fechaVencimiento.substring(0,10) : '';
                    var modal = new bootstrap.Modal(document.getElementById('modalEditarUnico'));
                    modal.show();
                });
        }
        function confirmarEliminar(id) {
            document.getElementById('eliminarId').value = id;
            var modal = new bootstrap.Modal(document.getElementById('modalEliminarUnico'));
            modal.show();
        }
        function mostrarToast(mensaje, tipo) {
            var toast = document.getElementById('toastMensaje');
            var body = document.getElementById('toastMensajeBody');
            toast.classList.remove('bg-success', 'bg-danger');
            toast.classList.add(tipo === 'danger' ? 'bg-danger' : 'bg-success');
            body.textContent = mensaje;
            toast.style.display = 'block';
            setTimeout(function() {
                toast.style.opacity = 1;
                toast.classList.add('show');
            }, 100);
            setTimeout(function() {
                toast.classList.remove('show');
                toast.style.opacity = 0;
                setTimeout(function(){ toast.style.display = 'none'; }, 500);
            }, 3200);
        }
        setTimeout(function() {
            var alerts = document.querySelectorAll('.alert');
            alerts.forEach(function(a) { a.style.opacity = '0'; });
        }, 3500);
    </script>
}
